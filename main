import pygame
import sys

# from fireball import Fireball
from mario import Mario
from mario import Platform

WINDOWWIDTH = 900
WINDOWHEIGHT = 600

# Set up colors
WHITE = pygame.Color("#FFFFFF")
BLUE = pygame.Color("#008080")
PURPLE = pygame.Color("#800080")

mario = Mario(WINDOWWIDTH/2, WINDOWHEIGHT/2, 16, 16)
platform1 = Platform(0, WINDOWHEIGHT - 40, 600, 40)
platform2 = Platform(WINDOWWIDTH / 2 - 50, WINDOWHEIGHT * 3/4, 100, 20)
platform3 = Platform(75, WINDOWHEIGHT - 300, 150, 20)
platform4 = Platform(575, 100, 150, 20)

# create a list of platforms instead of indivually
# platform_Collection = [(0, WINDOWHEIGHT - 40, WINDOWWIDTH, 40),
#                        (WINDOWWIDTH / 2 - 50, WINDOWHEIGHT *3/4, 100, 20),
#                        (75, WINDOWHEIGHT - 300, 150, 20),
#                        (575, 300, 150, 20)]

pygame.init()
surf = pygame.display.set_mode((WINDOWWIDTH, WINDOWHEIGHT), 0, 32)
pygame.display.set_caption('mario')

# font = pygame.font.Font(None, 48)

# Sprite Lists
mario_list = pygame.sprite.Group()  # user
platform_list = pygame.sprite.Group()  # platforms
all_sprites_list = pygame.sprite.Group()
fireball_list = pygame.sprite.Group()  # fireball

all_sprites_list.add(mario)
all_sprites_list.add(platform1)
all_sprites_list.add(platform2)
all_sprites_list.add(platform3)
all_sprites_list.add(platform4)
platform_list.add(platform1)
platform_list.add(platform2)
platform_list.add(platform3)
platform_list.add(platform4)

# for plat in platform_Collection:
#     p = Platform(*plat)
#     all_sprites_list.add(p)
#     platform_list.add(p)

running = True


while running:
    for event in pygame.event.get():
        if event.type == pygame.KEYDOWN:
            # Quit
            if event.key == pygame.K_q:
                running = False
                pygame.quit()
                sys.exit()
            # Move Left
            elif event.key == pygame.K_LEFT or event.key == pygame.K_a:
                mario.moveRight = False
                mario.moveLeft = True
                print('l')

            # Move Right
            elif event.key == pygame.K_RIGHT or event.key == pygame.K_d:
                mario.moveLeft = False
                mario.moveRight = True
                print('r')

            # Run / Shoot Fire
            elif event.key == pygame.K_LSHIFT:
                # if player.isFire:
                # Create fireball
                # fireball = Fireball()
                # fireball.rect.x = mario.rect.x
                # fireball.rect.y = mario.rect.y
                # fireball_list.add(fireball)
                print('running/shoot fire')

            elif event.key == pygame.K_UP or event.key == pygame.K_SPACE or event.key == pygame.K_w:
                mario.jump()
                print('jump')

            elif event.key == pygame.K_DOWN or event.key == pygame.K_s:
                print('crouch')

        elif event.type == pygame.KEYUP:
            # Stop moving Left
            if event.key == pygame.K_LEFT or event.key == pygame.K_a:
                mario.moveLeft = False

            # Stop moving Right
            elif event.key == pygame.K_RIGHT or event.key == pygame.K_d:
                mario.moveRight = False

            # Stop moving up
            elif event.key == pygame.K_UP or event.key == pygame.K_w:
                mario.moveUp = False

            # Stop crouching
            elif event.key == pygame.K_DOWN or event.key == pygame.K_s:
                mario.moveDown = False

            elif event.key == pygame.K_UP or event.key == pygame.K_SPACE or event.key == pygame.K_w:
                mario.jump_cut()

    all_sprites_list.update()

    surf.fill(BLUE)

    pygame.draw.rect(surf, PURPLE, platform1)
    pygame.draw.rect(surf, PURPLE, platform2)
    pygame.draw.rect(surf, PURPLE, platform3)
    pygame.draw.rect(surf, PURPLE, platform4)
    pygame.draw.rect(surf, WHITE, mario)
    mario.update()

    # all_sprites_list.draw(surf)

    # allows for player to land on top of platforms
    if mario.vel.y > 0:
        hits = pygame.sprite.spritecollide(mario, platform_list, False)
        if hits:
            if mario.pos.y < hits[0].rect.bottom:
                mario.pos.y = hits[0].rect.top
                mario.vel.y = 0
                mario.jumping = False

    if mario.rect.top > 900:
        mario.die()

    pygame.display.update()
